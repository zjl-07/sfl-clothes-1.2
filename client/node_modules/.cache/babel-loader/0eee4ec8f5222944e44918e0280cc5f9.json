{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionType from \"redux/cart/cart.types\";\nimport { addItemToCart } from \"redux/cart/cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ActionType.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case ActionType.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case ActionType.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\redux\\cart\\cart.reducer.js"],"names":["ActionType","addItemToCart","INITIAL_STATE","hidden","cartItems","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAU,CAACQ,kBAAhB;AACE,+BACKH,KADL;AAEEF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFjB;;AAIF,SAAKH,UAAU,CAACS,QAAhB;AACE,+BACKJ,KADL;AAEED,QAAAA,SAAS,EAAEH,aAAa,CAACI,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKV,UAAU,CAACS,QAAhB;AACE,+BACKJ,KADL;AAEED,QAAAA,SAAS,EAAEH,aAAa,CAACI,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAF1B;;AAIF;AACE,aAAOL,KAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import ActionType from \"redux/cart/cart.types\";\r\nimport { addItemToCart } from \"redux/cart/cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionType.TOGGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden\r\n      };\r\n    case ActionType.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload)\r\n      };\r\n    case ActionType.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}