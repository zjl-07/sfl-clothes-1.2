{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport ActionType from \"redux/user/user.types\";\nimport { loginSuccess, loginFailure, logoutFailure, logoutSuccess, registerFailure, registerSuccess } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"firebase/firebase.utils\";\nexport function* createUserSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(loginSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(loginFailure(err));\n  }\n}\nexport function* loginWithGoogle() {\n  try {\n    const _ref = yield auth.loginWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield createUserSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(loginFailure(err));\n  }\n}\nexport function* loginWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.loginWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield createUserSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(loginFailure(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const UserAuth = yield getCurrentUser();\n    if (!UserAuth) return;\n    yield createUserSnapshotFromUserAuth(UserAuth);\n  } catch (err) {\n    yield put(loginFailure(err));\n  }\n}\nexport function* checkUserAuthentication() {\n  yield takeLatest(ActionType.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* Logout() {\n  try {\n    yield auth.signOut();\n    yield put(logoutSuccess());\n  } catch (err) {\n    yield put(logoutFailure(err));\n  }\n}\nexport function* registerWithEmail({\n  payload: {\n    displayName,\n    password,\n    email\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(registerSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(registerFailure(err));\n  }\n}\nexport function* loginAfterRegister({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield createUserSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleloginStart() {\n  yield takeLatest(ActionType.GOOGLE_LOGIN_START, loginWithGoogle);\n}\nexport function* onEmailLoginStart() {\n  yield takeLatest(ActionType.EMAIL_LOGIN_START, loginWithEmail);\n}\nexport function* onLogoutStart() {\n  yield takeLatest(ActionType.SIGN_OUT_START, Logout);\n}\nexport function* onRegisterStart() {\n  yield takeLatest(ActionType.REGISTER_START, registerWithEmail);\n}\nexport function* onRegisterSuccess() {\n  yield takeLatest(ActionType.REGISTER_SUCCESS, loginAfterRegister);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleloginStart), call(onEmailLoginStart), call(checkUserAuthentication), call(onLogoutStart), call(onRegisterStart), call(onRegisterSuccess)]);\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","ActionType","loginSuccess","loginFailure","logoutFailure","logoutSuccess","registerFailure","registerSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","createUserSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","err","loginWithGoogle","loginWithPopup","user","loginWithEmail","payload","email","password","loginWithEmailAndPassword","isUserAuthenticated","UserAuth","checkUserAuthentication","CHECK_USER_SESSION","Logout","signOut","registerWithEmail","displayName","createUserWithEmailAndPassword","loginAfterRegister","onGoogleloginStart","GOOGLE_LOGIN_START","onEmailLoginStart","EMAIL_LOGIN_START","onLogoutStart","SIGN_OUT_START","onRegisterStart","REGISTER_START","onRegisterSuccess","REGISTER_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport ActionType from \"redux/user/user.types\";\r\nimport {\r\n  loginSuccess,\r\n  loginFailure,\r\n  logoutFailure,\r\n  logoutSuccess,\r\n  registerFailure,\r\n  registerSuccess\r\n} from \"./user.action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"firebase/firebase.utils\";\r\n\r\nexport function* createUserSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(loginSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (err) {\r\n    yield put(loginFailure(err));\r\n  }\r\n}\r\n\r\nexport function* loginWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.loginWithPopup(googleProvider);\r\n    yield createUserSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(loginFailure(err));\r\n  }\r\n}\r\n\r\nexport function* loginWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.loginWithEmailAndPassword(email, password);\r\n    yield createUserSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(loginFailure(err));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const UserAuth = yield getCurrentUser();\r\n    if (!UserAuth) return;\r\n    yield createUserSnapshotFromUserAuth(UserAuth);\r\n  } catch (err) {\r\n    yield put(loginFailure(err));\r\n  }\r\n}\r\n\r\nexport function* checkUserAuthentication() {\r\n  yield takeLatest(ActionType.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* Logout() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(logoutSuccess());\r\n  } catch (err) {\r\n    yield put(logoutFailure(err));\r\n  }\r\n}\r\n\r\nexport function* registerWithEmail({\r\n  payload: { displayName, password, email }\r\n}) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(registerSuccess({ user, additionalData: { displayName } }));\r\n  } catch (err) {\r\n    yield put(registerFailure(err));\r\n  }\r\n}\r\n\r\nexport function* loginAfterRegister({ payload: { user, additionalData } }) {\r\n  yield createUserSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onGoogleloginStart() {\r\n  yield takeLatest(ActionType.GOOGLE_LOGIN_START, loginWithGoogle);\r\n}\r\n\r\nexport function* onEmailLoginStart() {\r\n  yield takeLatest(ActionType.EMAIL_LOGIN_START, loginWithEmail);\r\n}\r\n\r\nexport function* onLogoutStart() {\r\n  yield takeLatest(ActionType.SIGN_OUT_START, Logout);\r\n}\r\n\r\nexport function* onRegisterStart() {\r\n  yield takeLatest(ActionType.REGISTER_START, registerWithEmail);\r\n}\r\n\r\nexport function* onRegisterSuccess() {\r\n  yield takeLatest(ActionType.REGISTER_SUCCESS, loginAfterRegister);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleloginStart),\r\n    call(onEmailLoginStart),\r\n    call(checkUserAuthentication),\r\n    call(onLogoutStart),\r\n    call(onRegisterStart),\r\n    call(onRegisterSuccess)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}