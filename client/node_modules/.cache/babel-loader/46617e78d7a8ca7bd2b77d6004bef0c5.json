{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"redux/shop/shop.action\";\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from \"redux/shop/shop.selector\";\nimport collectionsOverview from \"components/collections-overview/collections-overview\";\nimport withSpinner from \"components/with-spinner/with-spinner\";\nimport collectionPage from \"pages/collection/collection\";\nconst CollectionOverviewWithSpinner = withSpinner(collectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(collectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsFetching = _this$props.isCollectionsFetching,\n          selectIsCollectionsLoaded = _this$props.selectIsCollectionsLoaded;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectIsCollectionsFetching,\n  selectIsCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\pages\\shop\\shop.jsx"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionsLoaded","collectionsOverview","withSpinner","collectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionsFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,wBAA3C;AACA,SACEC,2BADF,EAEEC,yBAFF,QAGO,0BAHP;AAIA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,MAAMC,6BAA6B,GAAGF,WAAW,CAACD,mBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGH,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,iBAAiB,GAAG;AAAA,UACVT,0BADU,GACqB,KAAKU,KAD1B,CACVV,0BADU;AAGlBA,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBAKH,KAAKD,KALF;AAAA,UAELE,KAFK,eAELA,KAFK;AAAA,UAGLC,qBAHK,eAGLA,qBAHK;AAAA,UAILX,yBAJK,eAILA,yBAJK;AAMP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKU,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,6BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AApC8B;;AAuCjC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,qBAAqB,EAAEZ,2BADwB;AAE/CC,EAAAA,yBAAyB,EAAEA;AAFoB,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CACpBiB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { fetchCollectionsStartAsync } from \"redux/shop/shop.action\";\r\nimport {\r\n  selectIsCollectionsFetching,\r\n  selectIsCollectionsLoaded\r\n} from \"redux/shop/shop.selector\";\r\nimport collectionsOverview from \"components/collections-overview/collections-overview\";\r\nimport withSpinner from \"components/with-spinner/with-spinner\";\r\nimport collectionPage from \"pages/collection/collection\";\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(collectionsOverview);\r\nconst CollectionPageWithSpinner = withSpinner(collectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      match,\r\n      isCollectionsFetching,\r\n      selectIsCollectionsLoaded\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionOverviewWithSpinner\r\n              isLoading={isCollectionsFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner\r\n              isLoading={isCollectionsFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionsFetching: selectIsCollectionsFetching,\r\n  selectIsCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}