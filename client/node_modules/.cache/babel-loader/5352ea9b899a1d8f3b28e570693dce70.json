{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\src\\\\pages\\\\login-register\\\\login.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { googleLoginStart, emailLoginStart } from \"redux/user/user.action\";\nimport Input from \"components/form/form-input\";\nimport Button from \"components/button/button\";\nimport { FormContainer } from \"components/form/form-input.style\";\nimport { TitleContainer, ButtonsContainer, DetailsContainer } from \"./login-register.style\";\n\nconst Login = ({\n  loginWithGoogle,\n  emailLoginStart\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = userCredentials.email,\n          password = userCredentials.password;\n    emailLoginStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials({\n      [name]: value\n    });\n  };\n\n  return React.createElement(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: loginWithGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sign In With Google\")), React.createElement(DetailsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Don't have any account?\", React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Register Here!\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loginWithGoogle: () => dispatch(googleLoginStart()),\n  emailLoginStart: (email, password) => dispatch(emailLoginStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\pages\\login-register\\login.jsx"],"names":["React","useState","Link","connect","googleLoginStart","emailLoginStart","Input","Button","FormContainer","TitleContainer","ButtonsContainer","DetailsContainer","Login","loginWithGoogle","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","event","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { googleLoginStart, emailLoginStart } from \"redux/user/user.action\";\r\nimport Input from \"components/form/form-input\";\r\nimport Button from \"components/button/button\";\r\nimport { FormContainer } from \"components/form/form-input.style\";\r\nimport {\r\n  TitleContainer,\r\n  ButtonsContainer,\r\n  DetailsContainer\r\n} from \"./login-register.style\";\r\n\r\nconst Login = ({ loginWithGoogle, emailLoginStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { email, password } = userCredentials;\r\n\r\n    emailLoginStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n    setCredentials({ [name]: value });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <TitleContainer>Login</TitleContainer>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          value={email}\r\n          handleChange={handleChange}\r\n          required\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          value={password}\r\n          handleChange={handleChange}\r\n          required\r\n        />\r\n        <ButtonsContainer>\r\n          <Button type=\"submit\">Submit</Button>\r\n          <Button type=\"button\" onClick={loginWithGoogle} isGoogleSignIn>\r\n            Sign In With Google\r\n          </Button>\r\n        </ButtonsContainer>\r\n\r\n        <DetailsContainer>\r\n          Don't have any account?\r\n          <Link to=\"/register\"> Register Here!</Link>\r\n        </DetailsContainer>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loginWithGoogle: () => dispatch(googleLoginStart()),\r\n  emailLoginStart: (email, password) =>\r\n    dispatch(emailLoginStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login);\r\n"]},"metadata":{},"sourceType":"module"}