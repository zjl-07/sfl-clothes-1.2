{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemsToAdd) => {\n  const existingCartItem = cartItems.find(cartItems => cartItems.id === cartItemsToAdd.id);\n\n  if (existingCartItem) {\n    return [...cartItems, ...existingCartItem, {\n      quantity: existingCartItem.quantity + 1\n    }];\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemsToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\redux\\cart\\cart.utils.js"],"names":["addItemToCart","cartItems","cartItemsToAdd","existingCartItem","find","id","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AAC1D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBH,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBH,cAAc,CAACG,EADtB,CAAzB;;AAIA,MAAIF,gBAAJ,EAAsB;AACpB,WAAO,CACL,GAAGF,SADE,EAEL,GAAGE,gBAFE,EAGL;AAAEG,MAAAA,QAAQ,EAAEH,gBAAgB,CAACG,QAAjB,GAA4B;AAAxC,KAHK,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGL,SAAJ,oBAAoBC,cAApB;AAAoCI,IAAAA,QAAQ,EAAE;AAA9C,KAAP;AACD,CAdM","sourcesContent":["export const addItemToCart = (cartItems, cartItemsToAdd) => {\r\n  const existingCartItem = cartItems.find(\r\n    cartItems => cartItems.id === cartItemsToAdd.id\r\n  );\r\n\r\n  if (existingCartItem) {\r\n    return [\r\n      ...cartItems,\r\n      ...existingCartItem,\r\n      { quantity: existingCartItem.quantity + 1 }\r\n    ];\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemsToAdd, quantity: 1 }];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}