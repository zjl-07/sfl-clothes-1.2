{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"firebase/firebase.utils\";\nimport { updateCollections } from \"redux/shop/shop.action\";\nimport collectionsOverview from \"components/collections-overview/collections-overview\";\nimport withSpinner from \"components/with-spinner/with-spinner\";\nimport collectionPage from \"pages/collection/collection\";\nconst CollectionOverviewWithSpinner = withSpinner(collectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(collectionPage);\n\nconst ShopPage = () => {\n  const match = this.props.match;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\pages\\shop\\shop.jsx"],"names":["React","Component","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","collectionsOverview","withSpinner","collectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","props","path","isLoading","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,yBAHP;AAIA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,MAAMC,6BAA6B,GAAGF,WAAW,CAACD,mBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGH,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMG,QAAQ,GAAG,MAAM;AAAA,QACbC,KADa,GACH,KAAKC,KADF,CACbD,KADa;AAErB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAFN;AAGE,IAAA,MAAM,EAAED,KAAK,IACX,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEE;AAA1C,OAAyDF,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,mBADN;AAEE,IAAA,MAAM,EAAED,KAAK,IACX,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEE;AAAtC,OAAqDF,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CAnBD;;AAqBA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,iBAAiB,EAAEa,aAAa,IAAID,QAAQ,CAACZ,iBAAiB,CAACa,aAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAehB,OAAO,CACpB,IADoB,EAEpBc,kBAFoB,CAAP,CAGbL,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"firebase/firebase.utils\";\r\nimport { updateCollections } from \"redux/shop/shop.action\";\r\nimport collectionsOverview from \"components/collections-overview/collections-overview\";\r\nimport withSpinner from \"components/with-spinner/with-spinner\";\r\nimport collectionPage from \"pages/collection/collection\";\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(collectionsOverview);\r\nconst CollectionPageWithSpinner = withSpinner(collectionPage);\r\n\r\nconst ShopPage = () => {\r\n  const { match } = this.props;\r\n  return (\r\n    <div>\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        render={props => (\r\n          <CollectionOverviewWithSpinner isLoading={isLoading} {...props} />\r\n        )}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        render={props => (\r\n          <CollectionPageWithSpinner isLoading={isLoading} {...props} />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}