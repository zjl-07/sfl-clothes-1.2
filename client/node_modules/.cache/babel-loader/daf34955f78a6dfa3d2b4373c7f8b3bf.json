{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\redux\\shop\\shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionMap","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,yBAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACK,sBADiC;AAEvDG,EAAAA,OAAO,EAAED;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAME,uBAAuB,GAAGC,YAAY,KAAK;AACtDN,EAAAA,IAAI,EAAEJ,eAAe,CAACK,sBADgC;AAEtDG,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AAEAU,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACY,cAAD,CAAxB,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,KAAK,IAAIR,QAAQ,CAACH,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTION_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTION_START,\r\n  payload: collectionMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.FETCH_COLLECTION_START,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}