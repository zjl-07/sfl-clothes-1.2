{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\kw-clothes-e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport ActionType from \"redux/user/user.types\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"firebase/firebase.utils\";\nexport function* createUserSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield createUserSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield createUserSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(ActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(ActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const UserAuth = yield getCurrentUser();\n    if (!UserAuth) return;\n    yield createUserSnapshotFromUserAuth(UserAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* checkUserAuthentication() {\n  yield takeLatest(ActionType.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(ActionType.SIGN_OUT_START, signOut);\n}\nexport function* signUpWithEmail({\n  payload: {\n    displayName,\n    password,\n    email\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signInSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* singInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield createUserSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(ActionType.SIGN_UP_START, signUpWithEmail);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(ActionType.SIGN_UP_SUCCESS, singInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(checkUserAuthentication), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Documents\\GitHub\\kw-clothes-e-commerce\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","ActionType","signInSuccess","signInFailure","signOutFailure","signOutSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","createUserSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","err","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","UserAuth","checkUserAuthentication","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUpWithEmail","displayName","createUserWithEmailAndPassword","singInAfterSignUp","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,eALP;AAMA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,yBALP;AAOA,OAAO,UAAUC,8BAAV,CAAyCC,QAAzC,EAAmDC,cAAnD,EAAmE;AACxE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMb,IAAI,CACxBQ,yBADwB,EAExBG,QAFwB,EAGxBC,cAHwB,CAA1B;AAKA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACI,aAAa;AAAGc,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CADrB;AAAA,UACMc,IADN,QACMA,IADN;;AAEF,UAAMX,8BAA8B,CAACW,IAAD,CAApC;AACD,GAHD,CAGE,OAAOH,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMJ,IADN,SACMA,IADN;;AAEF,UAAMX,8BAA8B,CAACW,IAAD,CAApC;AACD,GAHD,CAGE,OAAOH,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAM9B,UAAU,CAACI,UAAU,CAAC2B,oBAAZ,EAAkCT,gBAAlC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAMhC,UAAU,CAACI,UAAU,CAAC6B,mBAAZ,EAAiCR,eAAjC,CAAhB;AACD;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMvB,cAAc,EAArC;AACA,QAAI,CAACuB,QAAL,EAAe;AACf,UAAMtB,8BAA8B,CAACsB,QAAD,CAApC;AACD,GAJD,CAIE,OAAOd,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUe,uBAAV,GAAoC;AACzC,QAAMpC,UAAU,CAACI,UAAU,CAACiC,kBAAZ,EAAgCH,mBAAhC,CAAhB;AACD;AAED,OAAO,UAAUI,OAAV,GAAoB;AACzB,MAAI;AACF,UAAM7B,IAAI,CAAC6B,OAAL,EAAN;AACA,UAAMrC,GAAG,CAACO,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOa,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACM,cAAc,CAACc,GAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUkB,cAAV,GAA2B;AAChC,QAAMvC,UAAU,CAACI,UAAU,CAACoC,cAAZ,EAA4BF,OAA5B,CAAhB;AACD;AAED,OAAO,UAAUG,eAAV,CAA0B;AAC/Bf,EAAAA,OAAO,EAAE;AAAEgB,IAAAA,WAAF;AAAed,IAAAA,QAAf;AAAyBD,IAAAA;AAAzB;AADsB,CAA1B,EAEJ;AACD,MAAI;AAAA,kBACe,MAAMlB,IAAI,CAACkC,8BAAL,CAAoChB,KAApC,EAA2CC,QAA3C,CADrB;AAAA,UACMJ,IADN,SACMA,IADN;;AAEF,UAAMvB,GAAG,CAACI,aAAa,CAAC;AAAEmB,MAAAA,IAAF;AAAQT,MAAAA,cAAc,EAAE;AAAE2B,QAAAA;AAAF;AAAxB,KAAD,CAAd,CAAT;AACD,GAHD,CAGE,OAAOrB,GAAP,EAAY;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUuB,iBAAV,CAA4B;AAAElB,EAAAA,OAAO,EAAE;AAAEF,IAAAA,IAAF;AAAQT,IAAAA;AAAR;AAAX,CAA5B,EAAmE;AACxE,QAAMF,8BAA8B,CAACW,IAAD,EAAOT,cAAP,CAApC;AACD;AAED,OAAO,UAAU8B,aAAV,GAA0B;AAC/B,QAAM7C,UAAU,CAACI,UAAU,CAAC0C,aAAZ,EAA2BL,eAA3B,CAAhB;AACD;AAED,OAAO,UAAUM,eAAV,GAA4B;AACjC,QAAM/C,UAAU,CAACI,UAAU,CAAC4C,eAAZ,EAA6BJ,iBAA7B,CAAhB;AACD;AAED,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAM/C,GAAG,CAAC,CACRC,IAAI,CAAC2B,mBAAD,CADI,EAER3B,IAAI,CAAC6B,kBAAD,CAFI,EAGR7B,IAAI,CAACiC,uBAAD,CAHI,EAIRjC,IAAI,CAACoC,cAAD,CAJI,EAKRpC,IAAI,CAAC0C,aAAD,CALI,EAMR1C,IAAI,CAAC4C,eAAD,CANI,CAAD,CAAT;AAQD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport ActionType from \"redux/user/user.types\";\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutFailure,\r\n  signOutSuccess\r\n} from \"./user.action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"firebase/firebase.utils\";\r\n\r\nexport function* createUserSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield createUserSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield createUserSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(ActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(ActionType.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const UserAuth = yield getCurrentUser();\r\n    if (!UserAuth) return;\r\n    yield createUserSnapshotFromUserAuth(UserAuth);\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* checkUserAuthentication() {\r\n  yield takeLatest(ActionType.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (err) {\r\n    yield put(signOutFailure(err));\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(ActionType.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* signUpWithEmail({\r\n  payload: { displayName, password, email }\r\n}) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signInSuccess({ user, additionalData: { displayName } }));\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* singInAfterSignUp({ payload: { user, additionalData } }) {\r\n  yield createUserSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(ActionType.SIGN_UP_START, signUpWithEmail);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(ActionType.SIGN_UP_SUCCESS, singInAfterSignUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(checkUserAuthentication),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart),\r\n    call(onSignUpSuccess)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}